)]}'
{"version":3,"sources":["facebook/facebook_configure.html","facebook/facebook_configure.js","facebook/facebook_client.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,+D;AACA,kI;AACA,kB;AACA,utB;AACA,kB;AACA,8C;AACA,sD;AACA,kjB;AACA,I;;;;;;;;;;;;;;;;;;;ACTA,yD;AACA,wB;AACA,gC;AACA,G;AACA,G;;AAEA,sE;AACA,U;AACA,yC;AACA,6C;AACA,I;AACA,E;;;;;;;;;;;;;;;;;;;ACXA,c;;AAEA,4C;AACA,E;AACA,4B;AACA,mF;AACA,4E;AACA,W;AACA,oF;AACA,qD;AACA,4E;AACA,gD;AACA,iB;AACA,G;;AAEA,kF;AACA,gB;AACA,2E;AACA,8C;AACA,W;AACA,G;;AAEA,wC;AACA,oG;AACA,2C;;AAEA,sB;AACA,4C;AACA,iD;;AAEA,kE;;AAEA,gB;AACA,gF;AACA,mE;AACA,mD;AACA,mE;;AAEA,qB;AACA,6B;AACA,2B;AACA,uB;AACA,yE;AACA,oC;AACA,K;AACA,E","file":"/packages/facebook.js","sourcesContent":["\nTemplate.__checkName(\"configureLoginServiceDialogForFacebook\");\nTemplate[\"configureLoginServiceDialogForFacebook\"] = new Template(\"Template.configureLoginServiceDialogForFacebook\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<p>\\n    First, you'll need to register your app on Facebook. Follow these steps:\\n  </p>\\n  \"), HTML.OL(\"\\n    \", HTML.Raw('<li>\\n      Visit <a href=\"https://developers.facebook.com/apps\" target=\"_blank\">https://developers.facebook.com/apps</a>\\n    </li>'), \"\\n    \", HTML.Raw('<li>\\n      Click \"Add a New App\".\\n    </li>'), \"\\n    \", HTML.Raw('<li>\\n      Select \"Website\" and type a name for your app.\\n    </li>'), \"\\n    \", HTML.Raw('<li>\\n      Click \"Create New Facebook App ID\".\\n    </li>'), \"\\n    \", HTML.Raw('<li>\\n      Select a category in the dropdown and click \"Create App ID\".\\n    </li>'), \"\\n    \", HTML.LI('\\n      Under \"Tell us about your website\", set Site URL to: ', HTML.SPAN({\n    \"class\": \"url\"\n  }, Blaze.View(\"lookup:siteUrl\", function() {\n    return Spacebars.mustache(view.lookup(\"siteUrl\"));\n  })), ' and click \"Next\".\\n    '), \"\\n    \", HTML.Raw('<li>\\n      Click \"Skip to Developer Dashboard\".\\n    </li>'), \"\\n    \", HTML.Raw('<li>\\n      Go to the \"Settings\" tab and add an email address under \"Contact Email\". Click \"Save Changes\".\\n    </li>'), \"\\n    \", HTML.Raw('<li>\\n      Go to the \"Status &amp; Review\" tab and select Yes for \"Do you want to make this app and\\n      all its live features available to the general public?\". Click \"Confirm\".\\n    </li>'), \"\\n    \", HTML.Raw(\"<li>\\n      Go back to the Dashboard tab.\\n    </li>\"), \"\\n  \") ];\n}));\n","Template.configureLoginServiceDialogForFacebook.helpers({\n  siteUrl: function () {\n    return Meteor.absoluteUrl();\n  }\n});\n\nTemplate.configureLoginServiceDialogForFacebook.fields = function () {\n  return [\n    {property: 'appId', label: 'App ID'},\n    {property: 'secret', label: 'App Secret'}\n  ];\n};\n","Facebook = {};\n\n// Request Facebook credentials for the user\n//\n// @param options {optional}\n// @param credentialRequestCompleteCallback {Function} Callback function to call on\n//   completion. Takes one argument, credentialToken on success, or Error on\n//   error.\nFacebook.requestCredential = function (options, credentialRequestCompleteCallback) {\n  // support both (options, callback) and (callback).\n  if (!credentialRequestCompleteCallback && typeof options === 'function') {\n    credentialRequestCompleteCallback = options;\n    options = {};\n  }\n\n  var config = ServiceConfiguration.configurations.findOne({service: 'facebook'});\n  if (!config) {\n    credentialRequestCompleteCallback && credentialRequestCompleteCallback(\n      new ServiceConfiguration.ConfigError());\n    return;\n  }\n\n  var credentialToken = Random.secret();\n  var mobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone/i.test(navigator.userAgent);\n  var display = mobile ? 'touch' : 'popup';\n\n  var scope = \"email\";\n  if (options && options.requestPermissions)\n    scope = options.requestPermissions.join(',');\n\n  var loginStyle = OAuth._loginStyle('facebook', config, options);\n\n  var loginUrl =\n        'https://www.facebook.com/v2.2/dialog/oauth?client_id=' + config.appId +\n        '&redirect_uri=' + OAuth._redirectUri('facebook', config) +\n        '&display=' + display + '&scope=' + scope +\n        '&state=' + OAuth._stateParam(loginStyle, credentialToken);\n\n  OAuth.launchLogin({\n    loginService: \"facebook\",\n    loginStyle: loginStyle,\n    loginUrl: loginUrl,\n    credentialRequestCompleteCallback: credentialRequestCompleteCallback,\n    credentialToken: credentialToken\n  });\n};\n"]}